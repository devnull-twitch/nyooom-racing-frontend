/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 nyooom_trophy.glb --transform
*/

import React, { forwardRef } from 'react'
import { useGLTF } from '@react-three/drei';
import { GroupProps } from '@react-three/fiber';

export const ForwardedModel = forwardRef<THREE.Group, GroupProps>(function Model(props, ref) {
  const { nodes, materials } = useGLTF('/nyooom_trophy-transformed.glb')
  return (
    <group {...props} ref={ref} dispose={null}>
      <group position={[0, 0.36, 0]} rotation={[Math.PI / 2, 0, 0]} scale={[0.14, 0.02, 0.14]}>
        <mesh geometry={(nodes.Cylinder_1 as THREE.Mesh).geometry} material={materials['Material.001']} />
        <mesh geometry={(nodes.Cylinder_2 as THREE.Mesh).geometry} material={materials['Material.002']} />
        <mesh geometry={(nodes.Cylinder_3 as THREE.Mesh).geometry} material={materials['Material.003']} />
        <mesh geometry={(nodes.Cylinder_4 as THREE.Mesh).geometry} material={materials['Material.005']} />
      </group>
      <group position={[-0.01, 0.12, 0.02]}>
        <mesh geometry={(nodes.Cube001 as THREE.Mesh).geometry} material={materials['Material.005']} />
        <mesh geometry={(nodes.Cube001_1 as THREE.Mesh).geometry} material={materials['Material.001']} />
      </group>
    </group>
  )
});

useGLTF.preload('/nyooom_trophy-transformed.glb')
